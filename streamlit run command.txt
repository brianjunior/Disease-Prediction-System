streamlit run "C:\Users\Dell\Desktop\Disease Prediction System\multiple disease pred.py"



# -*- coding: utf-8 -*-
"""
Created on Fri May 17 14:36:55 2024

@author: Dell
"""

import pickle
import streamlit as st
from streamlit_option_menu import option_menu

#Loading the saved models
diabetes_model = pickle.load(open("C:/Users/Dell/Desktop/Disease Prediction System/saved_models/diabetes_model.sav","rb"))

heart_disease_model = pickle.load(open("C:/Users/Dell/Desktop/Disease Prediction System/saved_models/heart_disease_model.sav","rb"))

parkinsons_model = pickle.load(open("C:/Users/Dell/Desktop/Disease Prediction System/saved_models/parkinsons_model.sav","rb"))


#Side bar navigation menu
with st.sidebar:
    selected = option_menu('Multiple Disease Prediction System',
                           
                           ['Diabetes Prediction',
                            'Heart Disease Prediction',
                            'Parkinsons Prediction'],
                           
                           icons = ['activity', 'heart', 'person'],
                           default_index=0)
    
    
#Diabetes Prediction
if(selected == 'Diabetes Prediction'):
    
    #page title
    st.title('Diabetes Prediction Using ML')
    
    
    #Getting the input data from the user
    #Columns for input fields
    col1, col2, col3 = st.columns(3)
    
    with col1:
         Pregnancies = st.text_input('Number Of Pregnancies')
        
    with col2:
         Glucose = st.text_input('Glucose Level')  
         
    with col3:
         BloodPressure = st.text_input('Blood Pressure Value')   
         
    with col1:
         SkinThickness = st.text_input('Skin Thickness Value')
         
    with col2:
          Insulin  = st.text_input('Insulin Level')  
          
    with col3:
          BMI = st.text_input('BMI Value')
          
    with col1:
          DiabetesPedigreeFunction = st.text_input('Diabetes Pedigree Function Value')
          
    with col2: 
          Age = st.text_input('Persons Age')
          
             
         
    
#Code for prediction
diab_diagnosis = ""

#Button for Predicting the results
if st.button('Diabetes Test Results'):
    diab_prediction = diabetes_model.predict([[Pregnancies, Glucose, BloodPressure, SkinThickness, Insulin, BMI, DiabetesPedigreeFunction, Age]])

    if (diab_prediction[0]==1):
        diab_diagnosis = "The Person is Diabetic"
        
    else:
        diab_diagnosis = "The person is not diabetic"
        
    st.success(diab_diagnosis)
    
    
    #Heart Disease Prediction
    if(selected == 'Heart Disease Prediction'):
        
        #page title
        st.title('Heart Disease Prediction Using ML')
        
        
        #Getting the input data from the user
        #Columns for input fields
        col1, col2, col3 = st.columns(3)
        
        with col1:
             Pregnancies = st.text_input('Number Of Pregnancies')
            
        with col2:
             Glucose = st.text_input('Glucose Level')  
             
        with col3:
             BloodPressure = st.text_input('Blood Pressure Value')   
             
        with col1:
             SkinThickness = st.text_input('Skin Thickness Value')
             
        with col2:
             Insulin  = st.text_input('Insulin Level')  
              
        with col3:
             BMI = st.text_input('BMI Value')
              
        with col1:
             DiabetesPedigreeFunction = st.text_input('Diabetes Pedigree Function Value')
              
        with col2: 
             Age = st.text_input('Persons Age')
              
                 
             
        
    #Code for prediction
    diab_diagnosis = ""

    #Button for Predicting the results
    if st.button('Diabetes Test Results'):
        diab_prediction = diabetes_model.predict([[Pregnancies, Glucose, BloodPressure, SkinThickness, Insulin, BMI, DiabetesPedigreeFunction, Age]])

        if (diab_prediction[0]==1):
            diab_diagnosis = "The Person is Diabetic"
            
        else:
            diab_diagnosis = "The person is not diabetic"
            
        st.success(diab_diagnosis)
        

        

        
    if(selected == 'Heart Disease Prediction'):
        
        #page title
        st.title('Heart Disease Prediction Using ML')
        
        
    if(selected == 'Parkinsons Prediction'):
        
        #page title
        st.title('Parkinsons Prediction Using ML')    
        
    

    

    
if(selected == 'Heart Disease Prediction'):
    
    #page title
    st.title('Heart Disease Prediction Using ML')
    
    
if(selected == 'Parkinsons Prediction'):
    
    #page title
    st.title('Parkinsons Prediction Using ML')    
    
    
    